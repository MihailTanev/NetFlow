@model CoursesViewModel
@{
    ViewData["Title"] = User.Identity.Name + "'s Courses";
}

<div class="col text-center">
    <h1 class="pt-3">@ViewData["Title"]</h1>
    <div class="title-underline"></div>
</div>
<br />

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Status</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Students</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var course in Model.Courses)
        {
            <tr>
                <td>
                    <a asp-area="Trainings" asp-controller="Courses" asp-action="Details" asp-route-courseId="@course.Id" asp-route-name="@course.Name.ToFriendlyUrl()">
                        <h4 class="text-info">@course.Name</h4>
                    </a>
                </td>
                <td>
                    @if (course.StartDate <= DateTime.UtcNow && course.EndDate >= DateTime.UtcNow)
                    {
                        <h5 class="text-info">active</h5>
                    }
                    else if (course.StartDate >= DateTime.UtcNow && DateTime.UtcNow <= course.EndDate)
                    {
                        <h5 class="text-warning">not started yet</h5>
                    }
                    else if (course.StartDate < DateTime.UtcNow && course.EndDate < DateTime.UtcNow)
                    {
                        <h5 class="text-danger">finished</h5>
                    }
                </td>
                <td>@course.StartDate.ToString("dd/MM/yyyy")</td>
                <td>@course.EndDate.ToString("dd/MM/yyyy")</td>
                <td><a class="btn btn-primary" asp-action="Students" asp-route-courseId="@course.Id">View</a></td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center p-3">
    @Html.PagedListPager((IPagedList)@Model.Courses.AsEnumerable(), page => Url.Action("Index", new { page = page }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
            UlElementClasses = new string[] { "pagination", "justify-content-center" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
        })
</div>
