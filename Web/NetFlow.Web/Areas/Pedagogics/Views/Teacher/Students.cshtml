@model StudentsEnrolledInCourseViewModel
@{
    ViewData["Title"] = Model.Course.Name;
}   

<div class="col text-center">
   <h1 class="pt-3">@ViewData["Title"]</h1>
   <div class="title-underline"></div>
</div>
<p class="text-center pt-2">Total Users in '@Model.Course.Name' course: @Model.Students.Count()</p>

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>User Since</th>
            <th>Grade</th>
            <th>Comment</th>
            <th>Assignments</th>
            <th>Add Grade & comment</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model.Students)
        {
            <tr>
                <td>@student.FirstName @student.LastName</td>
                <td>@student.Email</td>
                <td>@student.CreatedOn.ToString("dd MMM yyyy")</td>
                <td>
                    @if (student.Grade.Equals(null))
                    {
                        <p class="text-danger">No grade</p>
                    }
                    else
                    {
                        <h4 class="text-info">@((int)student.Grade)</h4>
                    }
                </td>
                <td>
                    @if (student.Comment == null)
                    {
                        <p class="text-danger">No comment</p>
                    }
                    else
                    {
                        <p class="text-info">@student.Comment</p>
                    }
                </td>
                <td>
                    @if (student.Assignment != null)
                    {
                        <a asp-action="DownloadAssignment" asp-route-courseId="@Model.Course.Id" asp-route-studentId="@student.Id">Download</a>
                    }
                    else
                    {
                        <p class="text-danger">No assignment uploaded</p>
                    }
                </td>
                <td>
                    <form asp-action="AddGrade" asp-route-courseId="@Model.Course.Id" method="post">
                        <div class="row">
                            <div class="col-md-8">
                                <input type="hidden" name="studentId" value="@student.Id" />
                                <select name="grade" asp-items="@Html.GetEnumSelectList<Grade>()" class="form-control" style="padding:0rem 2rem!important; background-color:white"></select>
                                <textarea name="comment" asp-for="@student.Comment" rows="2" class="form-control bg-dark text-white" placeholder="Leave a comment..."></textarea>
                            </div>
                            <div class="col-md-2">
                                <input type="submit" class="btn btn-warning" value="Add" />
                            </div>
                        </div>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center p-3">
    @Html.PagedListPager((IPagedList)@Model.Students.AsEnumerable(), page => Url.Action("Index", new { page = page }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
            UlElementClasses = new string[] { "pagination", "justify-content-center" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
        })
</div>