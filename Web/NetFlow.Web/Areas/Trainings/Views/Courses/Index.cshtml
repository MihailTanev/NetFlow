@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@model CoursesIndexViewModel

@{
    ViewData["Title"] = "All Courses";
}

<h2 class="text-center pt-3">@ViewData["Title"]</h2>
<div class="title-underline bg-dark"></div>

<div class="container">
    <div class="row pt-5">
        @foreach (var course in Model.Courses)
        {
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <a asp-action="Details"
                                   asp-route-courseId="@course.Id"
                                   asp-route-name="@course.Name.ToFriendlyUrl()">
                                    <h3 class="card-title text-info">
                                        @course.Name
                                    </h3>
                                </a>
                                <h6>Start date: @course.StartDate.ToString("dd MMM yyyy")</h6>
                                <h6>End date: @course.EndDate.ToString("dd MMM yyyy") </h6>

                                <p class="card-text">Created By: @course.Teacher.FirstName @course.Teacher.LastName</p>
                            </div>
                            <div class="col-md-6">
                                <img src="@course.Picture" alt="@course.Name" class="img-fluid card-img-top" />
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <div class="col-md-8">
                                @if (course.StartDate < DateTime.UtcNow)
                                {
                                    <h5 class="text-danger">outdated</h5>
                                }
                                else
                                {
                                    <h5 class="text-info">active</h5>
                                }
                            </div>
                            @if (this.User.Identity.IsAuthenticated && this.User.IsInRole(RoleConstants.ADMIN_ROLE))
                            {
                                <div class="col-md-4">
                                    <ul class="list-inline">
                                        <li class="list-inline-item">
                                            <a asp-action="Edit" asp-area="Administration"
                                               asp-route-courseId="@course.Id"
                                               asp-route-name="@course.Name.ToFriendlyUrl()">
                                                Edit
                                            </a>
                                        </li> |
                                        <li class="list-inline-item">
                                            <a asp-action="Delete" asp-area="Administration"
                                               asp-route-courseId="@course.Id"
                                               asp-controller="Courses"
                                               asp-route-name="@course.Name.ToFriendlyUrl()">
                                                Delete
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <br />
            </div>
        }
    </div>
</div>

<div class="text-center p-3">
    @Html.PagedListPager((IPagedList)@Model.Courses.AsEnumerable(), page => Url.Action("Index", new { page = page }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
            UlElementClasses = new string[] { "pagination", "justify-content-center" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
        })
</div>
