@model PostViewModel
@{
    ViewData["Title"] = "Blog Posts";
}

<div class="col text-center">
    <h1 class="pt-3">@ViewData["Title"]</h1>
    <div class="title-underline"></div>
</div>

<br />
@if (this.TempData.ContainsKey(BlogMessagesConstants.TEMPDATA_ERROR_MESSAGE))
{
    <div class="offset-md-3 col-md-6 offset-md-3 alert alert-dismissible alert-danger text-center">
        <strong>@this.TempData[BlogMessagesConstants.TEMPDATA_ERROR_MESSAGE]</strong>
    </div>
}
@if (this.TempData.ContainsKey(BlogMessagesConstants.TEMPDATA_SUCCESS_MESSAGE))
{
    <div class="offset-md-3 col-md-6 offset-md-3 alert alert-dismissible alert-success text-center">
        <strong>@this.TempData[BlogMessagesConstants.TEMPDATA_SUCCESS_MESSAGE]</strong>
    </div>
}

<div class="container">
    <div class="row pt-3">
        <div class="offset-md-1 col-md-10 offset-md-1">
            <ul class="list-group post-list">
                @foreach (var post in Model.Posts)
                {
                    <li class="list-group-item">
                        <h4 class="text-info">@post.Title</h4>
                        <hr />
                        <div>
                            <p>@Html.Raw(post.Description.Truncate(200))</p>
                        </div>
                        <i class="fas fa-pencil-alt"></i> created by @post.PublisherFirstName @post.PublisherLastName | <i class="fas fa-calendar-alt"></i> @post.CreatedDate.ToString("MMMM dd, yyyy")
                        <hr />
                        <a asp-action="Details" asp-route-id="@post.Id" asp-route-title="@post.Title.ToFriendlyUrl()"
                           class="btn btn-primary">
                            Read more
                        </a>
                        @if (User.Identity.IsAuthenticated && User.IsInRole(RoleConstants.PUBLISHER_ROLE))
                        {
                            <a asp-action="Delete" asp-route-postId="@post.Id" asp-route-title="@post.Title.ToFriendlyUrl()"
                               class="btn btn-danger">
                                Delete
                            </a>
                             <a asp-action="Edit" asp-route-postId="@post.Id" asp-route-title="@post.Title.ToFriendlyUrl()"
                               class="btn btn-warning">
                                Edit
                            </a>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://cdn.tiny.cloud/1/dhwodpwzvitaey35lyytoxfh85xi4anvexzudx5yo3j665p2/tinymce/5/tinymce.min.js"></script>
    <script>tinymce.init({ selector: '#Description' });</script>
}

<div class="text-center p-3">
    @Html.PagedListPager((IPagedList)@Model.Posts.AsEnumerable(), page => Url.Action("Index", new { page = page }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
            UlElementClasses = new string[] { "pagination", "justify-content-center" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
        })
</div>
